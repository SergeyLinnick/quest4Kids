name: Build and Deploy NextJS to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set short SHA
        id: vars
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build \
            --build-arg NODE_ENV="local" \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/nextjs-frontend:${{ env.SHORT_SHA }} .

      - name: Push image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nextjs-frontend:${{ env.SHORT_SHA }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Set short SHA
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy Docker container on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} "
            echo 'üßπ Cleaning unused Docker data...'
            docker image prune -a -f

            echo '‚¨áÔ∏è Pulling image with tag: ${{ env.SHORT_SHA }}'
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nextjs-frontend:${{ env.SHORT_SHA }}

            echo 'üõë Stopping old container if exists...'
            docker stop nextjs-frontend || true
            docker rm nextjs-frontend || true

            echo 'üöÄ Running new container...'
            docker run -d --restart unless-stopped \
              --name nextjs-frontend \
              -p 3001:3000 \
              -e NEXT_PUBLIC_API_URL='${{ secrets.NEXT_PUBLIC_API_URL }}' \
              -e NEXTAUTH_SECRET='${{ secrets.NEXTAUTH_SECRET }}' \
              -e AUTH_TRUST_HOST='${{ secrets.AUTH_TRUST_HOST }}' \
              ${{ secrets.DOCKERHUB_USERNAME }}/nextjs-frontend:${{ env.SHORT_SHA }}
          "
